WkhtmltopdfOnRails
==================

wkhtmltopdf_on_rails is a plugin that gives you a new controller method:  render_to_pdf (See the example usage below)

The plugin utilizes the wkhtmltopdf command line linux tool:  http://code.google.com/p/wkhtmltopdf/
The tool uses the WebKit to convert HTML and CSS to pdf, so there is full support. 
Essentially, the pdf that is created is the same as choosing "save as pdf" or "print to pdf" in your browser.

There is only one depency, Wkhtmltopdf.  

To install (on linux):

wget http://wkhtmltopdf.googlecode.com/files/wkhtmltopdf-0.8.3-static.tar.bz2
tar -jxvf wkhtmltopdf-0.8.3-static.tar.bz2
sudo ln -s /full_path_to/wkhtmltopdf /usr/local/bin/wkhtmltopdf

(I installed my copy to /opt/wkhtmltopdf)

after you install wkhtmltopdf, install the wkhtmltopdf_on_rails plugin:

script/plugin install git://github.com/tcocca/wkhtmltopdf_on_rails.git



Example
=======

Current there are 2 options for saving the PDFs and sending them back in rails:

The first is to provide a URL for the page that you want converted to a pdf, 
this is good when the page is a public facing page that anybody can see:

  Usage: 
  
  respond_to do |format|
    format.html {
      Normal html stuff ....
    }
    format.pdf do
      render_to_pdf({
        :pdf       => "test_wkhtmltopdf", 
        :file_path => File.join(RAILS_ROOT, 'pdfs'), 
        :source    => root_url
      })
    end
  end

  The render_to_pdf method takes the following options in the hash:
    
  :pdf => name of your pdf (without the .pdf extension - added automatically)
  :file_path => where your generated pdf will be created by the command line tool
  :source => url for the page you want to convert to a pdf
  
The second usage is to generate a html file locally and pass that file to the tool.
This should be used when the page that needs to be converted to pdf is behind a login, 
as the wkhtmltopdf will not be logged in and will be redirected most likely to another page.

  Usage:
  
  respond_to do |format|
    format.html {
      Normal html stuff ....
    }
    format.pdf do
      render_to_pdf({
        :pdf                   => "test_wkhtmltopdf", 
        :file_path             => File.join(RAILS_ROOT, 'pdfs'), 
        :template              => "/controller/action.html.erb",
        :layout                => "application.html.erb",
        :delete_generated_pdf  => true
      })
    end
  end
  
  The render_to_pdf method takes the following options in the hash:
    
  :pdf => name of your pdf (without the .pdf extension - added automatically)
  :file_path => where your generated pdf will be created by the command line tool
  :template => the path the to controller and action template you wish to convert to pdf
  
  Optional params:
  
  :layout => If you wish for rails to render your template in a layout specify the layout in this param
  :delete_generated_pdf => set this to true if you want to plugin to delete the generated pdf after it has been sent back to the user
  :wkhtmltopdf_options => takes a hash of optional params for wkhtmltopdf, see the current accepted list below
    
    :print_media => true # sets the --print-media-type flag for wkhtmltopdf, 
      this forces wkhtmltopdf to use the "print" media type instead of "screen", 
      so if you need to load custom stylesheets be sure to include this, 
      eg:
        
        render_to_pdf({
          :pdf                   => "test_wkhtmltopdf", 
          :file_path             => File.join(RAILS_ROOT, 'pdfs'), 
          :template              => "/controller/action.html.erb",
          :layout                => "application.html.erb",
          :delete_generated_pdf  => true,
          :wkhtmltopdf_options   => {
            :print_media  => true
          }
        }) 
  

TODO
=======

Add support for the optional wkhtmltopdf params
  - see:  wkhtmltopdf --help



Copyright (c) 2009 Tom Cocca ( tom dot cocca at gmail dot com ), released under the MIT license

